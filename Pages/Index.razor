@page "/index.html"
@using System.Text.Json
@using FantasyFootballMatchupAnalyzer.Classes.Helpers
@using Newtonsoft.Json
@using UserInfo
@inherits IndexPage

@code {
    private UserInfoModel userInfoModel;
    private string usernameInput = "";
    private List<FantasyFootballLeague> userLeagues = new();

    private ErrorModal errorModal;
}

<ErrorModal @ref="errorModal" />

<h1>Fantasy Football Matchup Analyzer</h1>

<h2>Get your Sleeper Leagues:</h2>

<form id="userDataForm" method="get">
    <label for="usernameInput">Username:</label>
    <input id="usernameInputField" type="text" name="usernameInput" @bind=usernameInput />
    <button type="button" @onclick="RequestUserData">Get User Data</button>
</form>

@if (!string.IsNullOrEmpty(usernameInput) && userInfoModel != null)
{
    <table>
        <thead>
            <tr>
                <th>Username</th>
                <th>UserID</th>
                <th>Avatar</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@userInfoModel.DisplayName</td>
                <td>@userInfoModel.UserId</td>
                <td><img src=@userInfoModel.AvatarDisplayLink alt="User Avatar" /></td>
            </tr>
        </tbody>
    </table>

    <p>DisplayName: @userInfoModel.DisplayName</p>
    <p>Is Bot: @userInfoModel.IsBot</p>
    <p>UserId: @userInfoModel.UserId</p>
    <p>Username: @userInfoModel.Username</p>

    @if (userLeagues == null || userLeagues.Count == 0)
    {
        <p>COULD NOT FIND LEAGUE DATA</p>
        return;
    }

    <h3>@(userInfoModel.DisplayName)'s Leagues</h3>

    @foreach (var league in userLeagues)
    {
        <div>
            <img src=@league.ImageDisplayLink alt="League Avatar" />
            <h4>@league.Name</h4>
        </div>
    }
}

@code {
    private async Task RequestUserData()
    {
        if (userInfoModel != null && usernameInput.ToLower() == userInfoModel.Username)
        {
            return;
        }

        try
        {
            userInfoModel = await RequestDataHelper.RequestData<UserInfoModel>(ApiCalls.SleeperUserApiUri + usernameInput);
            userLeagues = await RequestDataHelper.RequestData<List<FantasyFootballLeague>>(ApiCalls.SleeperUserLeaguesApiUri(userInfoModel.UserId));
        }
        catch (HttpRequestException e)
        {
            errorModal.ShowError($"Error({e.StatusCode}): {e.Message}");
        }
        catch (Exception e)
        {
            errorModal.ShowError($"Error({e.Message}");
        }
    }
} 