@page "/index.html"
@using System.Text.Json
@using UserInfo;
@inherits IndexPage

@code {
    private UserInfoModel userInfoModel;
    private string usernameInput = "";
}

<h1>Fantasy Football Matchup Analyzer</h1>

<h2>Get your Sleeper Leagues:</h2>

<form id="userDataForm" method="get">
    <label for="usernameInput">Username:</label>
    <input id="usernameInputField" type="text" name="usernameInput" @bind=usernameInput />
    <button type="button" @onclick="RequestUserData">Get User Data</button>
</form>

@if (!string.IsNullOrEmpty(usernameInput) && userInfoModel != null)
{
    <table>
        <thead>
            <tr>
                <th>Username</th>
                <th>UserID</th>
                <th>Avatar</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@userInfoModel.DisplayName</td>
                <td>@userInfoModel.UserId</td>
                <td><img src=@userInfoModel.AvatarDisplayLink alt="User Avatar" /></td>
            </tr>
        </tbody>
    </table>

    <p>DisplayName: @userInfoModel.DisplayName</p>
    <p>Is Bot: @userInfoModel.IsBot</p>
    <p>UserId: @userInfoModel.UserId</p>
    <p>Username: @userInfoModel.Username</p>
}

@code {
    private async Task RequestUserData()
    {
        using (var httpClient = new HttpClient())
        {
            try
            {
                HttpResponseMessage response = await httpClient.GetAsync($"https://api.sleeper.app/v1/user/{usernameInput}");

                // Ensure a successful response
                response.EnsureSuccessStatusCode();

                // Read and deserialize the response content
                var jsonResponse = await response.Content.ReadAsStringAsync();
                userInfoModel = UserInfoModel.FromJson(jsonResponse);
            }
            catch (HttpRequestException e)
            {
                Console.WriteLine($"Failed to retrieve data for: {usernameInput}");
                Console.WriteLine($"Error({e.Message}): {e.Message}");
            }

        }
    } 
} 